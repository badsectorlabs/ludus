#version=RHEL8
ignoredisk --only-use=sda
# Partition clearing information
clearpart --none --initlabel
# Use graphical install
# graphical
# Use CDROM installation media
cdrom
text
# Repositories
repo --name="BaseOS" --baseurl=https://download.rockylinux.org/pub/rocky/8/BaseOS/x86_64/kickstart/
repo --name="AppStream" --baseurl=https://download.rockylinux.org/pub/rocky/8/AppStream/x86_64/kickstart/
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
network --bootproto=dhcp --ipv6=auto --hostname=rocky8.local --activate
# Root password
rootpw root
# Run the Setup Agent on first boot
firstboot --disabled
# Do not configure the X Window System
skipx
# System services
services --disabled="kdump" --enabled="sshd,rsyslog,chronyd"
# System timezone
timezone Etc/UTC --isUtc
# Disk partitioning information
part / --fstype="xfs" --grow --size=6144
part swap --fstype="swap" --size=512
reboot

# Software Install
%packages
@^minimal-environment
curl
kexec-tools
openssh-server
openssh-clients
qemu-guest-agent
sudo
tuned
vim
# allow for ansible
python3
python3-libselinux

# unnecessary firmware
-a*firmware*
-b43-openfwwf
-b*firmware*
-i*firmware*
-libertas-usb8388-firmware
-n*firmware*
-q*firmware*
-r*firmware*
-x*firmware*
-z*firmware*
%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%post

# Default user
useradd localuser 
echo -e "password\npassword" | passwd localuser
usermod -aG wheel localuser 
echo "localuser ALL=(ALL) ALL" >> /etc/sudoers

# this is installed by default but we don't need it in virt
echo "Removing linux-firmware package."
dnf -C -y remove linux-firmware

# Remove firewalld; it is required to be present for install/image building.
echo "Removing firewalld."
dnf -C -y remove firewalld --setopt="clean_requirements_on_remove=1"

# remove avahi and networkmanager
echo "Removing avahi/zeroconf and NetworkManager"
dnf -C -y remove avahi\* 

echo -n "Getty fixes"
# although we want console output going to the serial console, we don't
# actually have the opportunity to login there. FIX.
# we don't really need to auto-spawn _any_ gettys.
sed -i '/^#NAutoVTs=.*/ a\
NAutoVTs=0' /etc/systemd/logind.conf

# set virtual-guest as default profile for tuned
echo "virtual-guest" > /etc/tuned/active_profile

# Because memory is scarce resource in most cloud/virt environments,
# and because this impedes forensics, we are differing from the Fedora
# default of having /tmp on tmpfs.
echo "Disabling tmpfs for /tmp."
systemctl mask tmp.mount

cat <<EOL > /etc/sysconfig/kernel
# UPDATEDEFAULT specifies if new-kernel-pkg should make
# new kernels the default
UPDATEDEFAULT=yes

# DEFAULTKERNEL specifies the default kernel package type
DEFAULTKERNEL=kernel
EOL

# make sure firstboot doesn't start
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot

echo "Fixing SELinux contexts."
touch /var/log/cron
touch /var/log/boot.log
mkdir -p /var/cache/yum
/usr/sbin/fixfiles -R -a restore

# reorder console entries
sed -i 's/console=tty0/console=tty0 console=ttyS0,115200n8/' /boot/grub2/grub.cfg

dnf update -y

sed -i "s/^.*requiretty/#Defaults requiretty/" /etc/sudoers

# Networking
ipv6=no

# IPv6
if [ "$ipv6" = "no" ]; then
    echo "net.ipv6.conf.all.disable_ipv6 = 1" > /etc/sysctl.d/50-ipv6.conf
    echo "net.ipv6.conf.default.disable_ipv6 = 1" >> /etc/sysctl.d/50-ipv6.conf
    echo "net.ipv6.conf.lo.disable_ipv6 = 1" >> /etc/sysctl.d/50-ipv6.conf
    for netconf in $(ls -1 /etc/NetworkManager/system-connections/*.nmconnection); do
        sed -i -e '/^\[ipv6\]$/,/^\[/ s/method=.*/method=disabled/' $netconf
    done
    sed -i -e '/^::1/d' /etc/hosts
    echo "AddressFamily inet" > /etc/ssh/sshd_config.d/50-ipv6.conf
    sed -i -e 's,^OPTIONS=",OPTIONS="-4 ,g' -e 's, ",",' /etc/sysconfig/chronyd
fi

# allow root to SSH
mkdir -m 0700 -p /root/.ssh
restorecon -R /root/.ssh > /dev/null 2>&1
sed -i 's/#\?\(PermitRootLogin\s*\).*$/\1 yes/' /etc/ssh/sshd_config

# Remove machine identification and state
for netdev in $(nmcli -t dev | cut -d: -f1 | grep -v lo); do
    sed -i -e '/uuid=/d' /etc/NetworkManager/system-connections/$netdev.nmconnection
    sed -i -e '/dhcp-/d' /etc/NetworkManager/system-connections/$netdev.nmconnection
    sed -i -e '/origin/d' /etc/NetworkManager/system-connections/$netdev.nmconnection
    sed -i -e '/timestamp/d' /etc/NetworkManager/system-connections/$netdev.nmconnection
done
truncate -s 0 /etc/machine-id /etc/resolv.conf
/bin/rm -rf /etc/systemd/network/7* /etc/udev/rules.d/7* /etc/ssh/ssh_host_*
/bin/rm -rf /var/lib/systemd/random-seed

# Clean DNF Cache
dnf clean all

# Clear caches, files, and logs
/bin/rm -rf /root/* /tmp/* /tmp/.[a-zA-Z]* /var/tmp/*
/bin/rm -rf /etc/*- /etc/*.bak /etc/*~ /etc/sysconfig/*~
/bin/rm -rf /var/log/rhsm/*
/bin/rm -rf /var/lib/dnf/* /var/lib/yum/repos/* /var/lib/yum/yumdb/*
/bin/rm -rf /var/lib/NetworkManager/* /var/lib/unbound/*.key
/bin/rm -rf /var/log/*debug /var/log/anaconda /var/log/dmesg*
/bin/rm -rf /var/lib/cloud/* /var/log/cloud-init*.log
/bin/rm -rf /var/lib/authselect/backups/*
truncate -s 0 /var/log/cron /var/log/tuned/tuned.log
truncate -s 0 /var/log/audit/audit.log /var/log/messages /var/log/secure
truncate -s 0 /var/log/btmp /var/log/wtmp /var/log/lastlog

# Update initramfs
dracut -f --regenerate-all

%end
