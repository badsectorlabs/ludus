- name: Set dns server
  ansible.windows.win_dns_client:
    adapter_names: '*'
    dns_servers:
      - "{{ dc_ip }}"

- name: Join the domain
  ansible.windows.win_domain_membership:
    dns_domain_name: "{{ netbios_name }}.{{ fqdn_tail }}"
    domain_admin_user: "{{ netbios_name }}.{{ fqdn_tail }}\\{{ domain_admin }}"
    domain_admin_password: "{{ domain_admin_password }}"
    domain_ou_path: "ou={{ ou_name }},DC={{ netbios_name }},DC={{ fqdn_tail.split('.') | join(',DC=') }}"
    state: domain
  register: domain_joined

- name: Set autologin entries
  ansible.builtin.include_tasks: tasks/windows/configure-autologon.yml

- name: Reboot after domain join
  ansible.windows.win_reboot:
  when: domain_joined.reboot_required

- name: Sync time with the DC
  ansible.windows.win_shell: "w32tm /resync"

- name: Update group policy
  ansible.windows.win_shell: "gpupdate /force"

- name: Gather Remote Desktop Users group name (multilingual)
  ansible.windows.win_shell: |
    (Get-WmiObject win32_group -Filter "SID='S-1-5-32-555'").Name
  register: rdp_users_group_name_command

- name: Set the Remote Desktop Users group name
  ansible.builtin.set_fact:
    rdp_users_group_name: "{{ rdp_users_group_name_command.stdout | trim }}"

# Well known SIDs
# https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-security-identifiers
#
#   Domain Users: {{ domain_sid }}-513

# This is a bit wild but since we don't have Get-ADDomain on clients, we can get the SID of the krbtgt account then just take the first part of the SID
- name: Get the domain SID for this domain (modern PowerShell)
  ansible.windows.win_shell: |
    [System.Security.Principal.NTAccount]::new((Get-WmiObject Win32_ComputerSystem).Domain, "krbtgt").Translate([System.Security.Principal.SecurityIdentifier]).Value
  register: domain_sid_command
  ignore_errors: true

- name: Get the domain SID for this domain (PowerShell <5.0 fallback)
  ansible.windows.win_shell: |
    (New-Object System.Security.Principal.NTAccount -ArgumentList (Get-WmiObject Win32_ComputerSystem).Domain, "krbtgt").Translate([System.Security.Principal.SecurityIdentifier]).Value
  register: domain_sid_command_fallback
  when: domain_sid_command is failed

- name: Set the domain SID
  ansible.builtin.set_fact:
    domain_sid: >-
      {{ (domain_sid_command.stdout | default('') | trim | regex_replace('-502', '')) if (domain_sid_command is not failed) else (domain_sid_command_fallback.stdout | default('') | trim | regex_replace('-502', '')) }}

# Ansible is fun sometimes.
- name: Set a backslash
  ansible.builtin.set_fact:
    backslash: '\'

- name: Gather Domain Users group name by SID (multilingual)
  ansible.windows.win_shell: |
    (Get-WmiObject win32_group -Filter "Domain='{{ netbios_name }}' and SID='{{ domain_sid }}-513'").Name
  register: domain_users_group_name_command_autologon
  # We must run as the domain/autologon to get the domain group info. Assumes the autologon user is a domain user.
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: '{{ autologon_user if backslash in autologon_user else netbios_name + backslash + autologon_user }}'
    ansible_become_password: '{{ autologon_password }}'
    ansible_become_flags: "logon_type=interactive logon_flags=with_profile"
  ignore_errors: true

- name: Gather Domain Users group name as domain admin if the autologon user login failed (possibly not created in the domain yet)
  ansible.windows.win_shell: |
    (Get-WmiObject win32_group -Filter "Domain='{{ netbios_name }}' and SID='{{ domain_sid }}-513'").Name
  register: domain_users_group_name_command_domain_admin
  when: domain_users_group_name_command_autologon is failed
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: '{{ netbios_name }}\{{ domain_admin }}'
    ansible_become_password: '{{ domain_admin_password }}'
    ansible_become_flags: "logon_type=interactive logon_flags=with_profile"

- name: Set the Domain Users group name from autologon
  ansible.builtin.set_fact:
    domain_users_group_name: "{{ domain_users_group_name_command_autologon.stdout | trim }}"
  when: domain_users_group_name_command_autologon is not failed

- name: Set the Domain Users group name from DA
  ansible.builtin.set_fact:
    domain_users_group_name: "{{ domain_users_group_name_command_domain_admin.stdout | trim }}"
  when: domain_users_group_name_command_domain_admin is not skipped

# "The users have to be part of the RDusers group locally on the server you want to login via RDP, not only in the AD."
# https://serverfault.com/questions/265531/members-of-remote-desktop-users-group-cannot-login
- name: Allow any domain users to RDP by adding the domain group to the  RDUsers group
  ansible.windows.win_group_membership:
    name: "{{ rdp_users_group_name }}"           # Remote Desktop Users
    members:
      - "{{ netbios_name }}\\{{ domain_users_group_name }}"
    state: present

- name: Set DNS search domain to include domain
  ansible.windows.win_powershell:
    script: |
      Set-DnsClientGlobalSetting -SuffixSearchList @("{{ netbios_name }}.{{ fqdn_tail }}","home.arpa")

- name: Reboot after domain join (again) to apply group policy (if GPOs are enabled)
  ansible.windows.win_reboot:
  when:
    - domain_joined.reboot_required
    - (ludus | selectattr('vm_name', 'match', dc_vm_name))[0].windows.gpos | default([]) | length > 0
