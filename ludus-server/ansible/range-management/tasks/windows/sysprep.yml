- name: Check if sysprepd file exists
  ansible.windows.win_stat:
    path: C:\ludus\sysprep\sysprepd
  register: sysprepd_file

- name: Skip tasks if sysprepd file exists
  ansible.builtin.meta: end_host
  when: sysprepd_file.stat.exists

- name: Create C:\Windows\Setup\Scripts directory
  ansible.windows.win_file:
    path: C:\Windows\Setup\Scripts
    state: directory

- name: Copy SetupComplete.cmd to C:\Windows\Setup\Scripts
  ansible.windows.win_copy:
    src: windows/sysprep/SetupComplete.cmd
    dest: C:\Windows\Setup\Scripts\SetupComplete.cmd

- name: Create C:\ludus\sysprep directory
  ansible.windows.win_file:
    path: C:\ludus\sysprep
    state: directory
    recursive: true

- name: Copy oob-disable.xml to C:\ludus\sysprep
  ansible.windows.win_copy:
    src: windows/sysprep/oob-disable.xml
    dest: C:\ludus\sysprep\oob-disable.xml

# https://www.deploymentresearch.com/fixing-why-sysprep-fails-in-windows-10-due-to-windows-store-updates/
# https://learn.microsoft.com/en-us/troubleshoot/windows-client/setup-upgrade-and-drivers/sysprep-fails-remove-or-update-store-apps#cause
- name: Remove Microsoft.Edge.GameAssist appx package if it exists as it prevents sysprep from working
  ansible.windows.win_shell: |
    $packageFullName = (Get-AppxPackage | Where-Object { $_.PackageFamilyName -eq 'Microsoft.Edge.GameAssist_8wekyb3d8bbwe' }).PackageFullName
    if ($packageFullName) {
      Remove-AppxPackage -Package $packageFullName
    }
  ignore_errors: true

- name: Run Sysprep
  ansible.windows.win_shell: C:\Windows\System32\Sysprep\sysprep.exe /generalize /quiet /reboot /oobe /unattend:C:\ludus\sysprep\oob-disable.xml

- name: Wait for 60 seconds for sysprep to finish
  ansible.builtin.pause:
    seconds: 60

- name: Wait for WinRM
  ansible.builtin.wait_for:
    host: "{{ ansible_host }}"
    port: 5986
    delay: 10
    state: started
  delegate_to: localhost
  register: wait_result

- name: Wait for 60 seconds for the second reboot
  ansible.builtin.pause:
    seconds: 60

- name: Wait for WinRM
  ansible.builtin.wait_for:
    host: "{{ ansible_host }}"
    port: 5986
    delay: 10
    state: started
  delegate_to: localhost
  register: wait_result

- name: Create sysprepd file
  ansible.windows.win_file:
    path: C:\ludus\sysprep\sysprepd
    state: touch

- name: Hostname change after sysprep
  ansible.windows.win_hostname:
    name: "{{ vm_hostname }}"
  register: res

- name: Reboot
  ansible.windows.win_reboot:
  when: res.reboot_required

- name: Wait for the host's control interface (WinRM via HTTPS) to come up
  local_action:
    module: wait_for
    host: "{{ ansible_host }}"
    port: 5986
    delay: 10
    state: started
  register: wait_result
  when: res.reboot_required
