{
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "title": "Ludus",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "network": {
            "$ref": "#/definitions/Network"
        },
        "ludus": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Ludus"
            }
        },
        "router": {
            "$ref": "#/definitions/Router"
        },
        "defaults": {
            "$ref": "#/definitions/Defaults"
        },
        "global_role_vars": {
            "$ref": "#/definitions/RoleVars"
        },
        "notify": {
            "$ref": "#/definitions/Notify"
        }
    },
    "required": [
        "ludus"
    ],
    "definitions": {
        "Defaults": {
            "type": "object",
            "description": "This key defines default settings for Ludus and Windows Domains created in ranges",
            "additionalProperties": false,
            "properties": {
                "snapshot_with_RAM": {
                    "type": "boolean",
                    "description": "When entering testing mode, capture the RAM state which allows reverting to a running VM"
                },
                "stale_hours": {
                    "type": "integer",
                    "description": "How many hours until a pre-existing snapshot should be deleted and retaken (if entering and exiting testing mode quickly)"
                },
                "ad_domain_functional_level": {
                    "type": "string",
                    "enum": [ "Win2003", "Win2008", "Win2008R2", "Win2012", "Win2012R2", "WinThreshold" ],
                    "description": "The functional level of each Windows domain created by Ludus"
                },
                "ad_forest_functional_level": {
                    "type": "string",
                    "enum": [ "Win2003", "Win2008", "Win2008R2", "Win2012", "Win2012R2", "WinThreshold" ],
                    "description": "The functional level of each Windows forest created by Ludus"
                },
                "ad_domain_admin": {
                    "type": "string",
                    "description": "The domain admin username for every Windows domain"
                },
                "ad_domain_admin_password": {
                    "type": "string",
                    "description": "The domain admin password for every Windows domain"
                },
                "ad_domain_user": {
                    "type": "string",
                    "description": "The domain user username for every Windows domain"
                },
                "ad_domain_user_password": {
                    "type": "string",
                    "description": "The domain user password for every Windows domain"
                },
                "ad_domain_safe_mode_password": {
                    "type": "string",
                    "description": "The domain safe mode password for every Windows domain"
                },
                "timezone": {
                    "type": "string",
                    "description": "The Unix TZ format timezone string to set for all VMs in the range"
                },
                "enable_dynamic_wallpaper": {
                    "type": "boolean",
                    "description": "Enable dynamic wallpaper for all Windows VMs in the range",
                    "default": true
                }
            },
            "required": [
                "ad_domain_admin",
                "ad_domain_admin_password",
                "ad_domain_functional_level",
                "ad_domain_safe_mode_password",
                "ad_domain_user",
                "ad_domain_user_password",
                "ad_forest_functional_level",
                "snapshot_with_RAM",
                "stale_hours",
                "timezone",
                "enable_dynamic_wallpaper"
            ],
            "title": "Defaults"
        },
        "Network": {
            "type": "object",
            "description": "This key defines network rules in your range. It is optional, and by default all traffic is allowed",
            "additionalProperties": false,
            "properties": {
                "inter_vlan_default": {
                    "type": "string",
                    "enum": [ "ACCEPT", "REJECT", "DROP" ],
                    "description": "The default rule to apply to traffic between VLANs. Default: ACCEPT"
                },
                "external_default": {
                    "type": "string",
                    "enum": [ "ACCEPT", "REJECT", "DROP" ],
                    "description": "The default rule to apply to traffic leaving the range out to the internet. Default: ACCEPT"
                },
                "wireguard_vlan_default": {
                    "type": "string",
                    "enum": [ "ACCEPT", "REJECT", "DROP" ],
                    "description": "The default rule to apply to traffic leaving the range to the WireGuard subnet. Default: ACCEPT"
                },
                "always_blocked_networks": {
                    "type": "array",
                    "items": [
                        {
                            "type": "string",
                            "pattern": "^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]{1,2}$"
                        }
                    ]
                },
                "rules": {
                    "type": "array",
                    "description": "Specify rules to restrict or allow based on inter_vlan_default. Default: allow all traffic",
                    "items": {
                        "$ref": "#/definitions/Rule"
                    }
                }
            },
            "required": [
            ],
            "title": "Network"
        },
        "Rule": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The rule name will be added as a comment in iptables"
                },
                "vlan_src": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 2,
                            "maximum": 255,
                            "description": "Traffic source VLAN"
                        },
                        {
                            "type": "string",
                            "enum": [ "public", "all", "wireguard" ]
                        }
                    ]
                },
                "ip_last_octet_src": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 255
                        },
                        {
                            "type": "string",
                            "pattern": "^[0-9]{1,3}-[0-9]{1,3}$"
                        }
                    ],
                    "description": "The single machine or range of machines from the vlan_src to apply the rule to"
                },
                "vlan_dst": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 2,
                            "maximum": 255
                        },
                        {
                            "type": "string",
                            "enum": [ "public", "all", "wireguard" ]
                        }
                    ],
                    "description": "Traffic destination VLAN"
                },
                "ip_last_octet_dst": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 255
                        },
                        {
                            "type": "string",
                            "pattern": "^[0-9]{1,3}-[0-9]{1,3}$"
                        }
                    ],
                    "description": "The single machine or range of machines from the vlan_dst to apply the rule to"
                },                
                "protocol": {
                    "type": "string",
                    "enum": [ "tcp", "udp", "udplite", "icmp", "ipv6-icmp", "esp", "ah", "sctp", "all" ],
                    "description": "The protocol the rule acts on"
                },
                "ports": {
                    "$ref": "#/definitions/Ports",
                    "description": "A single port, a range in the format start:end, or 'all'"
                },
                "action": {
                    "type": "string",
                    "enum": [ "ACCEPT", "REJECT", "DROP" ],
                    "description": "The action to apply to matching packets"
                }
            },
            "required": [
                "action",
                "name",
                "ports",
                "protocol",
                "vlan_dst",
                "vlan_src"
            ],
            "title": "Rule"
        },
        "Ludus": {
            "type": "object",
            "additionalProperties": false,
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "domain": {
                                "properties": {
                                    "role": {
                                        "const": "primary-dc"
                                    }
                                }
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "windows": {
                                "properties": {
                                    "gpos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "disable_defender",
                                                "anon_share_access"
                                            ]
                                        },
                                        "description": "The GPOs to enable for the domain. Only applies to a primary-dc. Default: none"
                                    }
                                }
                            }
                        }
                    },
                    "else": {
                        "properties": {
                            "windows": {
                                "not": {
                                    "required": ["gpos"]
                                }
                            }
                        }
                    }
                }
            ],
            "oneOf": [
                {
                    "required": ["windows"],
                    "not": {
                        "anyOf": [
                            { "required": ["linux"] },
                            { "required": ["macOS"] }
                        ]
                    }
                },
                {
                    "required": ["linux"],
                    "not": {
                        "anyOf": [
                            { "required": ["windows"] },
                            { "required": ["macOS"] }
                        ]
                    }
                },
                {
                    "required": ["macOS"],
                    "not": {
                        "anyOf": [
                            { "required": ["windows"] },
                            { "required": ["linux"] }
                        ]
                    }
                }
            ],
            "properties": {
                "vm_name": {
                    "type": "string",
                    "description": "The name of the VM in Proxmox. You can use the `{{ range_id }}` template string which resolves to your range ID (i.e. JS)"
                },
                "hostname": {
                    "type": "string",
                    "description": "The hostname for the VM. Note: Windows host names are limited to 15 characters due to NETBIOS"
                },
                "template": {
                    "type": "string",
                    "description": "The template that will be the base for this VM (`ludus templates list` to get a list of them)"
                },
                "vlan": {
                    "type": "integer",
                    "minimum": 2,
                    "maximum": 255,
                    "description": "The VLAN for this VM. This number will be the third octet of the VM's IP"
                },
                "ip_last_octet": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 255,
                    "description": "The last octet for this VM's IP address. Must be unique in the VLAN."
                },
                "force_ip": {
                    "type": "boolean",
                    "description": "If set to rue, the config defined IP address will be used for the VM even if there are other valid IPs available via qemu-guest-agent"
                },
                "ram_min_gb": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 4096,
                    "description": "If defined, the minimum amount of RAM to allocated to the VM in ballooning mode"
                },
                "ram_gb": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 4096,
                    "description": "The amount of RAM to allocate to the VM in in non-ballooning mode, or the max RAM in ballooning mode. Define ram_min_gb to enable ballooning mode."
                },
                "cpus": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 512,
                    "description": "The number of cpu cores to allocate to this VM (can provision more CPUs than the host physically has)"
                },
                "full_clone": {
                    "type": "boolean",
                    "description": "Should this VM be a full clone (true) or linked clone (false). Default: false"
                },
                "testing": {
                    "$ref": "#/definitions/Testing"
                },
                "windows": {
                    "$ref": "#/definitions/Windows"
                },
                "domain": {
                    "$ref": "#/definitions/Domain"
                },
                "linux": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "description": "Set this to true for linux VMs - leave undefined or false for Windows/macOS VMs"
                        },
                        {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "packages": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "List of packages to install using ansible.builtin.package"
                                }
                            }
                        }
                    ]
                },
                "macOS": {
                    "type": "boolean",
                    "description": "Set this to true for macOS VMs - leave undefined or false for Windows/Linux VMs"
                },
                "unmanaged": {
                    "type": "boolean",
                    "description": "Set this to true for VMs that cannot report an IP to ansible via proxmox (no qemu-guest-agent, i.e. EDR appliances)"
                },
                "roles": {
                    "$ref": "#/definitions/Roles"
                },
                "role_vars": {
                    "$ref": "#/definitions/RoleVars"
                },
                "ansible_groups": {
                    "type": "array",
                    "description": "User defined Ansible groups to apply to this VM. The VM will be assigned to these groups in ansible and for `range inventory` output",
                    "items": {
                        "type": "string"
                    }
                },
                "dns_rewrites": {
                    "$ref": "#/definitions/DNSRewrites"
                }
            },
            "required": [
                "cpus",
                "hostname",
                "ip_last_octet",
                "ram_gb",
                "template",
                "vlan",
                "vm_name"
            ],
            "title": "Range"
        },
        "Domain": {
            "type": "object",
            "description": "Define this key to put this machine in a domain (Windows only)",
            "additionalProperties": false,
            "properties": {
                "fqdn": {
                    "type": "string",
                    "format": "hostname",
                    "description": "The FQDN of the domain"
                },
                "role": {
                    "type": "string",
                    "enum": [ "primary-dc", "alt-dc", "member" ],
                    "description": "The role of the VM in the domain"
                }
            },
            "required": [
                "fqdn",
                "role"
            ],
            "title": "Domain"
        },
        "Testing": {
            "type": "object",
            "description": "This key controls the behavior of the VM in testing mode. If undefined, both values are set to true",
            "additionalProperties": false,
            "properties": {
                "snapshot": {
                    "type": "boolean",
                    "description": "Snapshot this VM going into testing, and revert it coming out of testing. Default: true"
                },
                "block_internet": {
                    "type": "boolean",
                    "description": "Cut this VM off from the internet during testing. Default true"
                }
            },
            "required": [
                "block_internet",
                "snapshot"
            ],
            "title": "Testing"
        },
        "Windows": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "sysprep": {
                    "type": "boolean",
                    "description": "Set to true to run sysprep before any other tasks on this VM. Default: false"
                },
                "install_additional_tools": {
                    "type": "boolean",
                    "description": "Install firefox, chrome, VSCode, burp suite, 7zip, process hacker, ilspy and other useful utilities. Default: false"
                },
                "chocolatey_ignore_checksums": {
                    "type": "boolean",
                    "description": "Ignore any checksum errors when installing chocolatey packages (for packages that are 3rd party hosted and update before the choco package). Default: false"
                },
                "chocolatey_packages": {
                    "type": "array",
                    "description": "An array of chocolatey package names you'd like installed on this VM. Default: none",
                    "items": {
                        "type": "string",
                        "description": "Chocolatey package name"
                    }
                },
                "office_version": {
                    "type": "integer",
                    "enum": [ 2013, 2016, 2019, 2021 ],
                    "description": "The Microsoft office version you would like installed on this VM. Default: undefined (don't install office)"
                },
                "office_arch": {
                    "type": "string",
                    "enum": [ "64bit", "32bit" ],
                    "description": "The architecture for the Microsoft office install. Default: undefined (don't install office)"
                },
                "visual_studio_version": {
                    "type": "integer",
                    "enum": [ 2017, 2019, 2022 ],
                    "description": "The version of Microsoft Visual Studio to install (community edition). Note: 2022 cannot target < .NET 4.5. Default: undefined (don't install visual studio)"
                },
                "autologon_user": {
                    "type": "string",
                    "description": "The username to use for autologon. Default: localuser unless domain joined, then default.ad_domain_user"
                },
                "autologon_password": {
                    "type": "string",
                    "description": "The password to use for autologon. Default: password unless domain joined, then default.ad_domain_user_password"
                },
                "gpos": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "disable_defender",
                            "anon_share_access"
                        ]
                    },
                    "description": "The GPOs to enable for the domain. Only applies to a primary-dc. Default: none"
                }
            },
            "dependentRequired": {
                "autologon_user": ["autologon_password"]
            },
            "required": [],
            "title": "Windows"
        },
        "Ports": {
            "anyOf": [
                {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                },
                {
                    "type": "string",
                    "pattern": "^([0-9]{1,5}|[0-9]{1,5}:[0-9]{1,5}|all)$"
                }
            ],
            "title": "Ports",
            "description": "A single port, a range in the format start:end, or 'all'"
        },
        "RoleVars": {
            "type": ["number", "string", "boolean", "object", "array", "null"],
            "description": "User defined variables in `key: value` format that are passed to ALL user defined roles",
            "additionalProperties": true,
            "required": [
            ],
            "title": "RoleVars"
        },
        "DNSRewrites": {
            "type": "array",
            "description": "User defined domains to assign this VMs IP in DNS for the whole range",
            "items": {
                "type": "string",
                "description": "Domain to assign this VM's IP in DNS (wildcards allowed)"
            }
        },
        "Roles": {
            "type": "array",
            "description": "User defined Ansible roles to apply to this VM. Roles must be installed on the Ludus host with `ludus ansible role add`.",
            "items": {
                "oneOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "object",
                        "required": ["name"],
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "depends_on": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": ["vm_name", "role"],
                                    "properties": {
                                        "vm_name": {
                                            "type": "string"
                                        },
                                        "role": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "InboundWireguard": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the WireGuard server on the router (default: false)"
                },
                "server_cidr": {
                    "type": "string",
                    "pattern": "^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]{1,2}$",
                    "description": "The CIDR of the WireGuard server (default: 10.254.254.0/24)"
                },
                "port": {
                    "type": "integer",
                    "enum": [ 51820 ],
                    "description": "The port the WireGuard server is listening on (UDP) (default: 51820). Note: This must be 51820 to work with port forwarding."
                },
                "allowed_vlans": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 255,
                        "description": "The VLANs that WireGuard clients are allowed to connect to (default: all)"
                    }
                }
            },
            "required": [
                "enabled"
            ],
            "title": "InboundWireguard"
        },
        "Router": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "vm_name": {
                    "type": "string",
                    "description": "The name of the VM in Proxmox. You can use the `{{ range_id }}` template string which resolves to your range ID (i.e. JS)"
                },
                "hostname": {
                    "type": "string",
                    "description": "The hostname for the VM. Note: Windows host names are limited to 15 characters due to NETBIOS"
                },
                "template": {
                    "type": "string",
                    "description": "The template that will be the base for this VM (`ludus templates list` to get a list of them)"
                },
                "ram_min_gb": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 4096,
                    "description": "If defined, the minimum amount of RAM to allocated to the VM in ballooning mode"
                },
                "ram_gb": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 4096,
                    "description": "The amount of RAM to allocate to the VM in in non-ballooning mode, or the max RAM in ballooning mode. Define ram_min_gb to enable ballooning mode."
                },
                "cpus": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 512,
                    "description": "The number of cpu cores to allocate to this VM (can provision more CPUs than the host physically has)"
                },
                "roles": {
                    "$ref": "#/definitions/Roles"
                },
                "role_vars": {
                    "$ref": "#/definitions/RoleVars"
                },
                "outbound_wireguard_config": {
                    "type": "string",
                    "description": "The contents of a WireGuard client configuration that the router will direct traffic out of for the VLANs in outbound_wireguard_vlans"
                },
                "outbound_wireguard_vlans": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "description": "The VLANs that will be routed over the WireGuard VPN on the router"
                    }
                },
                "inbound_wireguard": {
                    "$ref": "#/definitions/InboundWireguard"
                }
            },
            "dependentRequired": {
                "outbound_wireguard_config": ["outbound_wireguard_vlans"]
            },
            "required": [
            ],
            "title": "Router"
        },
        "Notify": {
            "type": "object",
            "description": "Use the notify key to send notification(s) when a range deployment finishes or fails.",
            "properties": {
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "A Shoutrrr url (see https://containrrr.dev/shoutrrr/services/overview/ for more information)"
                    }
                }
            },
            "required": [
                "urls"
            ],
            "title": "Notify"
        }
    }
}